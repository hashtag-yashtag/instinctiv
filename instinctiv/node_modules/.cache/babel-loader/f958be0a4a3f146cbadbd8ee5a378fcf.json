{"ast":null,"code":"import _classCallCheck from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yash/instinctiv/instinctiv/src/components/Checkout/index.js\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\n\nvar Checkout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Checkout, _React$Component);\n\n  function Checkout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onToken = function (token, addresses) {// TODO: Send the token information and any other\n      // relevant information to your payment process\n      // server, wait for the response, and update the UI\n      // accordingly. How this is done is up to you. Using\n      // XHR, fetch, or a GraphQL mutation is typical.\n    };\n\n    return _this;\n  }\n\n  _createClass(Checkout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        min: \"100\",\n        max: \"100000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(StripeCheckout, {\n        amount: \"500\",\n        billingAddress: true,\n        description: \"Buy Instinctiv Tokens\",\n        locale: \"auto\",\n        name: \"instinctiv\",\n        stripeKey: \"pk_test_fSeP0u5pxF5vEmLguwFpf80Z\",\n        token: this.onToken,\n        zipCode: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Checkout;\n}(React.Component);\n\nexport { Checkout as default };","map":{"version":3,"sources":["/Users/yash/instinctiv/instinctiv/src/components/Checkout/index.js"],"names":["React","StripeCheckout","Checkout","onToken","token","addresses","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;IAEqBC,Q;;;;;;;;;;;;;;;;;;UAMjBC,O,GAAU,UAACC,KAAD,EAAQC,SAAR,EAAsB,CAC5B;AACA;AACA;AACA;AACA;AACH,K;;;;;;;wCAVmB,CAEnB;;;6BAWQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAC,KAAzB;AAA+B,QAAA,GAAG,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,cAAD;AACA,QAAA,MAAM,EAAC,KADP;AAEA,QAAA,cAAc,MAFd;AAGA,QAAA,WAAW,EAAC,uBAHZ;AAIA,QAAA,MAAM,EAAC,MAJP;AAKA,QAAA,IAAI,EAAC,YALL;AAMA,QAAA,SAAS,EAAC,kCANV;AAOA,QAAA,KAAK,EAAE,KAAKF,OAPZ;AAQA,QAAA,OAAO,MARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAeH;;;;EA/BiCH,KAAK,CAACM,S;;SAAvBJ,Q","sourcesContent":["import React from 'react'\nimport StripeCheckout from 'react-stripe-checkout';\n\nexport default class Checkout extends React.Component {\n\n    componentDidMount() {\n\n    }\n\n    onToken = (token, addresses) => {\n        // TODO: Send the token information and any other\n        // relevant information to your payment process\n        // server, wait for the response, and update the UI\n        // accordingly. How this is done is up to you. Using\n        // XHR, fetch, or a GraphQL mutation is typical.\n    };\n\n\n    render() {\n        return (\n            <div>\n                <input type=\"number\" min=\"100\" max=\"100000\"/>\n                <StripeCheckout\n                amount=\"500\"\n                billingAddress\n                description=\"Buy Instinctiv Tokens\"\n                locale=\"auto\"\n                name=\"instinctiv\"\n                stripeKey=\"pk_test_fSeP0u5pxF5vEmLguwFpf80Z\"\n                token={this.onToken}\n                zipCode\n            />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}