{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @extends {Component}\n */\n\n/**\n * @fileOverview The text component in the Donut Chart inner circle.\n * Shows the selected item's label and value\n * @name DonutInnerText.js\n * @author JJ Naughton\n * @license MIT\n */\n\n\nvar DonutInnerText = function (_Component) {\n  (0, _inherits3.default)(DonutInnerText, _Component);\n\n  function DonutInnerText() {\n    (0, _classCallCheck3.default)(this, DonutInnerText);\n    return (0, _possibleConstructorReturn3.default)(this, (DonutInnerText.__proto__ || (0, _getPrototypeOf2.default)(DonutInnerText)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(DonutInnerText, [{\n    key: 'render',\n\n    /* React render function */\n    value: function render() {\n      var _props = this.props,\n          item = _props.item,\n          className = _props.className,\n          width = _props.width,\n          formatValues = _props.formatValues,\n          total = _props.total;\n      var label = item.label;\n      var value = item.value;\n      var half = width / 2;\n      var labelClassName = className + '-label';\n      var valueClassName = className + '-value';\n      return _react2.default.createElement('g', {\n        className: className\n      }, _react2.default.createElement('text', {\n        className: labelClassName,\n        x: half,\n        y: '45%',\n        textAnchor: 'middle'\n      }, label), _react2.default.createElement('text', {\n        className: valueClassName,\n        x: half,\n        y: '60%',\n        textAnchor: 'middle'\n      }, formatValues(value, total)));\n    }\n  }]);\n  return DonutInnerText;\n}(_react.Component);\n\nexports.default = DonutInnerText;\nDonutInnerText.propTypes = {\n  item: _propTypes2.default.shape({\n    value: _propTypes2.default.number.isRequired,\n    label: _propTypes2.default.string.isRequired,\n    className: _propTypes2.default.string,\n    isEmpty: _propTypes2.default.boolean\n  }).isRequired,\n  className: _propTypes2.default.string,\n  total: _propTypes2.default.number,\n  width: _propTypes2.default.number,\n  formatValues: _propTypes2.default.func\n};\nDonutInnerText.defaultProps = {\n  item: {\n    label: '',\n    value: 100,\n    isEmpty: true\n  },\n  total: 100,\n  className: 'donutchart-innertext',\n  width: 500,\n  formatValues: function formatValues(value) {\n    return value;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}