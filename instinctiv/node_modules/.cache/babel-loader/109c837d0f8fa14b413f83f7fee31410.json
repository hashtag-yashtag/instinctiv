{"ast":null,"code":"import _classCallCheck from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yash/instinctiv/instinctiv/src/components/Checkout/index.js\";\nimport React, { Component } from 'react';\nimport { Elements, StripeProvider } from 'react-stripe-elements';\nimport CheckoutForm from './CheckoutForm';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(StripeProvider, {\n        apiKey: \"pk_test_fSeP0u5pxF5vEmLguwFpf80Z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"React Stripe Elements Example\"), React.createElement(Elements, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(CheckoutForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // import React from 'react'\n// import StripeCheckout from 'react-stripe-checkout';\n// import axios from 'axios'\n// import \"./checkout.css\"\n// export default class Checkout extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { value: '' };\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     componentDidMount() {\n//     }\n//     onToken = (description) => (token, args) => {\n//         axios.post('3RD_PARTY_SERVER', {\n//             description,\n//             source: token.id,\n//             amount: this.state.value,\n//             metadata: args\n//         }).then((data) => { console.log(data) })\n//             .catch(() => { this.errorPayment() });\n//         // TODO: Send the token information and any other\n//         // relevant information to your payment process\n//         // server, wait for the response, and update the UI\n//         // accordingly. How this is done is up to you. Using\n//         // XHR, fetch, or a GraphQL mutation is typical.\n//     };\n//     successPayment() {\n//         console.log(\"SUCCESS PAYMENT\")\n//     }\n//     errorPayment() {\n//         console.log(\"ERROR PAYMERNT\")\n//     }\n//     handleChange(event) {\n//         this.setState({ value: event.target.value });\n//     }\n//     handleSubmit(event) {\n//         event.preventDefault();\n//     }\n//     render() {\n//         return (\n//             <div class=\"align-center\">\n//                 <h4>Buy Tokens</h4>\n//                 <form onSubmit={this.handleSubmit}>\n//                     <input\n//                         type=\"number\"\n//                         id=\"tokens\"\n//                         name=\"tokens\"\n//                         min=\"100\"\n//                         max=\"100000\"\n//                         placeholder=\"Number of Tokens\"\n//                         value={this.state.value}\n//                         onChange={this.handleChange}\n//                     />\n//                 </form>\n//                 <StripeCheckout\n//                     amount={this.state.value}\n//                     billingAddress\n//                     description=\"Buy Instinctiv Tokens\"\n//                     locale=\"auto\"\n//                     name=\"instinctiv\"\n//                     stripeKey=\"pk_test_fSeP0u5pxF5vEmLguwFpf80Z\"\n//                     token={this.onToken}\n//                     zipCode\n//                 />\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/yash/instinctiv/instinctiv/src/components/Checkout/index.js"],"names":["React","Component","Elements","StripeProvider","CheckoutForm","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,uBAAvC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;IAEMC,G;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAC,kCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF,CADF;AAUD;;;;EAZeJ,S;;AAelB,eAAeI,GAAf,C,CAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react';\nimport {Elements, StripeProvider} from 'react-stripe-elements';\nimport CheckoutForm from './CheckoutForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <StripeProvider apiKey=\"pk_test_fSeP0u5pxF5vEmLguwFpf80Z\">\n        <div className=\"example\">\n          <h1>React Stripe Elements Example</h1>\n          <Elements>\n            <CheckoutForm />\n          </Elements>\n        </div>\n      </StripeProvider>\n    );\n  }\n}\n\nexport default App;\n\n\n// import React from 'react'\n// import StripeCheckout from 'react-stripe-checkout';\n// import axios from 'axios'\n// import \"./checkout.css\"\n\n// export default class Checkout extends React.Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = { value: '' };\n\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n\n//     }\n\n//     componentDidMount() {\n//     }\n\n//     onToken = (description) => (token, args) => {\n\n//         axios.post('3RD_PARTY_SERVER', {\n//             description,\n//             source: token.id,\n//             amount: this.state.value,\n//             metadata: args\n//         }).then((data) => { console.log(data) })\n//             .catch(() => { this.errorPayment() });\n//         // TODO: Send the token information and any other\n//         // relevant information to your payment process\n//         // server, wait for the response, and update the UI\n//         // accordingly. How this is done is up to you. Using\n//         // XHR, fetch, or a GraphQL mutation is typical.\n//     };\n\n//     successPayment() {\n//         console.log(\"SUCCESS PAYMENT\")\n//     }\n\n//     errorPayment() {\n//         console.log(\"ERROR PAYMERNT\")\n//     }\n\n//     handleChange(event) {\n//         this.setState({ value: event.target.value });\n//     }\n\n//     handleSubmit(event) {\n//         event.preventDefault();\n//     }\n\n\n\n//     render() {\n//         return (\n\n//             <div class=\"align-center\">\n//                 <h4>Buy Tokens</h4>\n//                 <form onSubmit={this.handleSubmit}>\n//                     <input\n//                         type=\"number\"\n//                         id=\"tokens\"\n//                         name=\"tokens\"\n//                         min=\"100\"\n//                         max=\"100000\"\n//                         placeholder=\"Number of Tokens\"\n//                         value={this.state.value}\n//                         onChange={this.handleChange}\n//                     />\n\n//                 </form>\n\n//                 <StripeCheckout\n//                     amount={this.state.value}\n//                     billingAddress\n//                     description=\"Buy Instinctiv Tokens\"\n//                     locale=\"auto\"\n//                     name=\"instinctiv\"\n//                     stripeKey=\"pk_test_fSeP0u5pxF5vEmLguwFpf80Z\"\n//                     token={this.onToken}\n//                     zipCode\n//                 />\n//             </div>\n//         )\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}