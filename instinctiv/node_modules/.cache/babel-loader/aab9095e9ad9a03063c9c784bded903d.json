{"ast":null,"code":"import _classCallCheck from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yash/instinctiv/instinctiv/src/components/Home/Autocomplete.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as ROUTES from '../../constants/routes';\nimport { withRouter } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nvar Autocomplete =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Autocomplete, _Component);\n\n  function Autocomplete(props) {\n    var _this;\n\n    _classCallCheck(this, Autocomplete);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Autocomplete).call(this, props));\n\n    _this.onChange = function (e) {\n      var _this$props = _this.props,\n          suggestions = _this$props.suggestions,\n          userSuggestions = _this$props.userSuggestions;\n      var userInput = e.currentTarget.value; // Filter our suggestions that don't contain the user's input\n\n      var filteredSuggestions = suggestions.filter(function (suggestion) {\n        return suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1;\n      });\n\n      _this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      }); //users suggestions\n\n\n      var filteredUserSuggestions = userSuggestions.filter(function (suggestion) {\n        return suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1;\n      });\n\n      _this.setState({\n        activeSuggestion: _this.state.activeSuggestion,\n        filteredSuggestions: filteredSuggestions,\n        filteredUserSuggestions: filteredUserSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    _this.onClick = function (e) {\n      _this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n\n      console.log('redirect?'); //this.props.history.push(ROUTES.ACCOUNT);\n      //e.preventDefault();\n    };\n\n    _this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      filteredUserSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Autocomplete, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onChange = this.onChange,\n          onClick = this.onClick,\n          onKeyDown = this.onKeyDown,\n          _this$state = this.state,\n          activeSuggestion = _this$state.activeSuggestion,\n          filteredSuggestions = _this$state.filteredSuggestions,\n          filteredUserSuggestions = _this$state.filteredUserSuggestions,\n          showSuggestions = _this$state.showSuggestions,\n          userInput = _this$state.userInput;\n      var suggestionsListComponent;\n\n      if (showSuggestions && userInput) {\n        if (filteredSuggestions.length || filteredUserSuggestions.length) {\n          suggestionsListComponent = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, \" Stocks \"), React.createElement(\"ul\", {\n            className: \"suggestions\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, filteredSuggestions.map(function (suggestion, index) {\n            var className; // Flag the active suggestion with a class\n\n            if (index === activeSuggestion) {\n              className = \"suggestion-active\";\n            } //console.log('sugg', index, activeSuggestion);\n\n\n            return React.createElement(Route, {\n              render: function render(_ref) {\n                var history = _ref.history;\n                return React.createElement(\"li\", {\n                  className: className,\n                  key: suggestion,\n                  onClick: function onClick() {\n                    _this2.setState({\n                      activeSuggestion: 0,\n                      filteredSuggestions: [],\n                      showSuggestions: false,\n                      userInput: suggestion\n                    });\n\n                    var str = suggestion.substring(0, suggestion.indexOf(\":\"));\n                    history.push('/stocks/' + str);\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 119\n                  },\n                  __self: this\n                }, suggestion);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118\n              },\n              __self: this\n            });\n          })), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \" Users \"), React.createElement(\"ul\", {\n            className: \"suggestions\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, filteredUserSuggestions.map(function (suggestion, index) {\n            var className; // Flag the active suggestion with a class\n            //console.log('user',index, activeSuggestion);\n\n            if (index === activeSuggestion - filteredSuggestions.length) {\n              className = \"suggestion-active\";\n            }\n\n            return React.createElement(Route, {\n              render: function render(_ref2) {\n                var history = _ref2.history;\n                return React.createElement(\"li\", {\n                  className: className,\n                  key: suggestion,\n                  onClick: function onClick() {\n                    _this2.setState({\n                      activeSuggestion: 0,\n                      filteredSuggestions: [],\n                      showSuggestions: false,\n                      userInput: suggestion\n                    });\n\n                    history.push('/user/' + suggestion);\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 148\n                  },\n                  __self: this\n                }, suggestion);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            });\n          })));\n        } else {\n          suggestionsListComponent = React.createElement(\"div\", {\n            className: \"no-suggestions\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, React.createElement(\"em\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, \"No results :(\"));\n        }\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Route, {\n        render: function render(_ref3) {\n          var history = _ref3.history;\n          return React.createElement(\"input\", {\n            type: \"text\",\n            onChange: onChange,\n            onKeyDown: function onKeyDown(e) {\n              var _this2$state = _this2.state,\n                  activeSuggestion = _this2$state.activeSuggestion,\n                  filteredSuggestions = _this2$state.filteredSuggestions,\n                  filteredUserSuggestions = _this2$state.filteredUserSuggestions; // User pressed the enter key\n\n              if (e.keyCode === 13) {\n                history.push(activeSuggestion >= filteredSuggestions.length ? '/user/' + filteredUserSuggestions[activeSuggestion - filteredSuggestions.length] : '/stocks/' + filteredSuggestions[activeSuggestion].substring(0, filteredSuggestions[activeSuggestion].indexOf(\":\")));\n                return;\n              } // User pressed the up arrow\n              else if (e.keyCode === 38) {\n                  if (activeSuggestion === 0) {\n                    return;\n                  }\n\n                  _this2.setState({\n                    activeSuggestion: activeSuggestion - 1\n                  });\n                } // User pressed the down arrow\n                else if (e.keyCode === 40) {\n                    if (activeSuggestion === filteredSuggestions.length + filteredUserSuggestions.length - 1) {\n                      return;\n                    }\n\n                    _this2.setState({\n                      activeSuggestion: activeSuggestion + 1\n                    });\n                  }\n            },\n            value: userInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), suggestionsListComponent);\n    }\n  }]);\n\n  return Autocomplete;\n}(Component);\n\nAutocomplete.propTypes = {\n  suggestions: PropTypes.instanceOf(Array),\n  userSuggestions: PropTypes.instanceOf(Array)\n};\nAutocomplete.defaultProps = {\n  suggestions: [],\n  userSuggestions: []\n};\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/yash/instinctiv/instinctiv/src/components/Home/Autocomplete.jsx"],"names":["React","Component","Fragment","PropTypes","ROUTES","withRouter","Route","Autocomplete","props","onChange","e","suggestions","userSuggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","filteredUserSuggestions","state","onClick","innerText","console","log","onKeyDown","suggestionsListComponent","length","map","index","className","history","str","substring","push","keyCode","propTypes","instanceOf","Array","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as ROUTES from '../../constants/routes';\nimport { withRouter } from 'react-router-dom';\nimport { Route } from 'react-router-dom'\n\n\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n    userSuggestions: PropTypes.instanceOf(Array)\n  };\n\n  static defaultProps = {\n    suggestions: [],\n    userSuggestions: []\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      filteredUserSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\"\n    };\n  }\n\n  onChange = e => {\n    const { suggestions, userSuggestions } = this.props;\n    const userInput = e.currentTarget.value;\n\n    // Filter our suggestions that don't contain the user's input\n    const filteredSuggestions = suggestions.filter(\n      suggestion =>\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value\n    });\n\n\n    //users suggestions\n    const filteredUserSuggestions = userSuggestions.filter(\n      suggestion =>\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    this.setState({\n      activeSuggestion: this.state.activeSuggestion,\n      filteredSuggestions,\n      filteredUserSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value\n    });\n  };\n\n  onClick = e => {\n\n    \n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText\n    });\n\n    console.log('redirect?');\n    //this.props.history.push(ROUTES.ACCOUNT);\n    //e.preventDefault();\n  };\n\n  \n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        filteredUserSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length || filteredUserSuggestions.length) {\n        suggestionsListComponent = (\n          <div>\n            <h5> Stocks </h5>\n            <ul className=\"suggestions\">\n              {filteredSuggestions.map((suggestion, index) => {\n                let className;\n\n                // Flag the active suggestion with a class\n                if (index === activeSuggestion) {\n                  className = \"suggestion-active\";\n                }\n\n                //console.log('sugg', index, activeSuggestion);\n\n                return (\n                  <Route render={({ history}) => (\n                    <li className={className} key={suggestion} onClick={() => { \n                      this.setState({\n                        activeSuggestion: 0,\n                        filteredSuggestions: [],\n                        showSuggestions: false,\n                        userInput: suggestion\n                      }); \n                      var str = suggestion.substring(0, suggestion.indexOf(\":\"));\n                      history.push('/stocks/'+str);\n                    }}>\n                      {suggestion}\n                    </li>\n                  )} />\n                );\n              })}\n            </ul>\n            <h5> Users </h5>\n            <ul className=\"suggestions\">\n              {filteredUserSuggestions.map((suggestion, index) => {\n                let className;\n\n                // Flag the active suggestion with a class\n                //console.log('user',index, activeSuggestion);\n                if (index === activeSuggestion - filteredSuggestions.length) {\n                  className = \"suggestion-active\";\n                }\n\n                return (\n                  <Route render={({ history}) => (\n                    <li className={className} key={suggestion} onClick={() => { \n                      this.setState({\n                        activeSuggestion: 0,\n                        filteredSuggestions: [],\n                        showSuggestions: false,\n                        userInput: suggestion\n                      }); \n                      history.push('/user/'+suggestion);\n                    }}>\n                      {suggestion}\n                    </li>\n                  )} />\n                );\n              })}\n          </ul>\n        </div>\n        );\n      } else {\n        suggestionsListComponent = (\n          <div className=\"no-suggestions\">\n            <em>No results :(</em>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Fragment>\n        <Route render={({ history}) => (\n                    \n          <input\n            type=\"text\"\n            onChange={onChange}\n            onKeyDown={e => {\n\n              const { activeSuggestion, filteredSuggestions, filteredUserSuggestions } = this.state;\n\n              // User pressed the enter key\n\n              \n              if (e.keyCode === 13) {\n                \n                history.push(activeSuggestion >= filteredSuggestions.length ? \n                  '/user/'+filteredUserSuggestions[activeSuggestion-filteredSuggestions.length] :\n                  '/stocks/'+filteredSuggestions[activeSuggestion].substring(0, filteredSuggestions[activeSuggestion].indexOf(\":\")));\n                return;\n              }\n\n\n              // User pressed the up arrow\n              else if (e.keyCode === 38) {\n                if (activeSuggestion === 0) {\n                  return;\n                }\n\n                this.setState({ activeSuggestion: activeSuggestion - 1 });\n              }\n              // User pressed the down arrow\n              else if (e.keyCode === 40) {\n                if (activeSuggestion === (filteredSuggestions.length + filteredUserSuggestions.length-1)) {\n                  return;\n                }\n\n                this.setState({ activeSuggestion: activeSuggestion + 1 });\n              }\n\n            }}\n            value={userInput}\n          />\n        )} />  \n        {suggestionsListComponent}\n      </Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}