{"ast":null,"code":"import _classCallCheck from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yash/instinctiv/instinctiv/src/components/Prediction/index.js\";\nimport React, { Component } from 'react';\nimport { withAuthorization, AuthUserContext } from '../Session';\nimport * as ROLES from '../../constants/roles';\nimport { Table, Col, Row, Button, Card } from 'reactstrap';\nimport { withFirebase } from '../Firebase';\nimport DonutChart from 'react-donut-chart';\nimport { compose } from 'recompose';\nimport PropTypes from 'prop-types';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nvar dataPie = [{\n  label: 'AAPL',\n  value: 25\n}, {\n  label: 'MSFT',\n  value: 15\n}, {\n  label: 'ADBE',\n  value: 5\n}, {\n  label: 'TSLA',\n  value: 20\n}, {\n  label: 'AAL',\n  value: 30\n}, {\n  label: 'FB',\n  value: 5\n}];\n\nvar Prediction =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Prediction, _Component);\n\n  function Prediction() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prediction);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prediction)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.toggleDarkLight = function (event) {\n      var body = document.getElementById(\"body\");\n      var currentClass = body.className;\n      body.className = currentClass === \"dark-mode\" ? \"light-mode\" : \"dark-mode\";\n    };\n\n    return _this;\n  }\n\n  _createClass(Prediction, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, function (authUser) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"body\", {\n          id: \"body\",\n          class: \"light-mode\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          name: \"dark_light\",\n          onClick: _this2.toggleDarkLight,\n          title: \"Toggle dark/light mode\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Change Theme\"), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), React.createElement(Col, {\n          sm: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"home-page\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Prediction Database\")), React.createElement(DonutChart, {\n          data: dataPie,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        })), React.createElement(Col, {\n          sm: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }))));\n      });\n    }\n  }]);\n\n  return Prediction;\n}(Component);\n\nvar condition = function condition(authUser) {\n  return authUser && !!authUser.roles[ROLES.ADMIN];\n};\n\nexport default compose(withAuthorization(condition), withFirebase)(Prediction);","map":{"version":3,"sources":["/Users/yash/instinctiv/instinctiv/src/components/Prediction/index.js"],"names":["React","Component","withAuthorization","AuthUserContext","ROLES","Table","Col","Row","Button","Card","withFirebase","DonutChart","compose","PropTypes","BootstrapTable","paginationFactory","dataPie","label","value","Prediction","toggleDarkLight","event","body","document","getElementById","currentClass","className","authUser","condition","roles","ADMIN"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { withAuthorization, AuthUserContext } from '../Session';\r\nimport * as ROLES from '../../constants/roles';\r\nimport { Table, Col, Row, Button, Card } from 'reactstrap';\r\nimport { withFirebase } from '../Firebase';\r\nimport DonutChart from 'react-donut-chart';\r\nimport { compose } from 'recompose';\r\nimport PropTypes from 'prop-types';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nconst dataPie = [\r\n    {label:'AAPL', value: 25},\r\n    {label:'MSFT', value: 15},\r\n    {label:'ADBE', value: 5},\r\n    {label:'TSLA', value: 20},\r\n    {label:'AAL', value: 30},\r\n    {label:'FB', value: 5}\r\n  ]\r\n\r\nclass Prediction extends Component {\r\n  toggleDarkLight = event => {\r\n   var body = document.getElementById(\"body\");\r\n   var currentClass = body.className;\r\n   body.className = currentClass === \"dark-mode\" ? \"light-mode\" : \"dark-mode\";\r\n }\r\n\r\n  render() {\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n      {authUser => (\r\n        <div>\r\n        <body id=\"body\" class=\"light-mode\">\r\n        <Button color=\"primary\" name=\"dark_light\" onClick= {this.toggleDarkLight} title=\"Toggle dark/light mode\">Change Theme</Button>\r\n          <Row>\r\n            <Col sm=\"3\">\r\n            </Col>\r\n            <Col sm=\"6\">\r\n              <div className=\"home-page\">\r\n            <h2>Prediction Database</h2>\r\n            </div>\r\n            <DonutChart data = {dataPie} />\r\n            </Col>\r\n            <Col sm=\"3\"></Col>\r\n            </Row>\r\n            </body>\r\n        </div>\r\n      )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst condition = authUser =>\r\n  authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  withAuthorization(condition),\r\n  withFirebase,\r\n)(Prediction);\r\n"]},"metadata":{},"sourceType":"module"}