{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _LegendItem = require('./LegendItem');\n\nvar _LegendItem2 = _interopRequireDefault(_LegendItem);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @extends {Component}\n */\n\n/**\n * @fileOverview Legend component.\n * Orchestrates all rendering each LegendItem component,\n * based on each item.\n * @name Legend.js\n * @author JJ Naughton\n * @license MIT\n */\n\n\nvar Legend = function (_Component) {\n  (0, _inherits3.default)(Legend, _Component);\n\n  function Legend() {\n    (0, _classCallCheck3.default)(this, Legend);\n    return (0, _possibleConstructorReturn3.default)(this, (Legend.__proto__ || (0, _getPrototypeOf2.default)(Legend)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(Legend, [{\n    key: 'render',\n\n    /* React render function */\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          data = _props.data,\n          strokeColor = _props.strokeColor,\n          emptyColor = _props.emptyColor,\n          colorFunction = _props.colorFunction,\n          colors = _props.colors,\n          width = _props.width,\n          totalWidth = _props.totalWidth,\n          onClick = _props.onClick,\n          onMouseEnter = _props.onMouseEnter,\n          toggleSelect = _props.toggleSelect,\n          selected = _props.selected;\n      var legendItemClassName = className + '-item';\n      return _react2.default.createElement('g', {\n        className: className\n      }, data.map(function (item, index) {\n        var classes = {};\n        var isEmpty = item.isEmpty,\n            className = item.className;\n        var stroke = strokeColor;\n        var opacity = 1;\n\n        if (isEmpty) {\n          classes.empty = true;\n          stroke = emptyColor;\n        } else if (selected.label === item.label) {\n          if (toggleSelect) {\n            classes.toggled = true;\n            opacity = 1;\n          } else {\n            classes.selected = true;\n            opacity = 0.5;\n          }\n        }\n\n        if (className) {\n          classes[className] = true;\n        }\n\n        classes[legendItemClassName] = true;\n        var fill = isEmpty ? emptyColor : colorFunction(colors, index);\n        return _react2.default.createElement(_LegendItem2.default, {\n          key: 'legenditem' + index,\n          index: index,\n          item: item,\n          className: (0, _classnames2.default)(classes),\n          width: width,\n          totalWidth: totalWidth,\n          opacity: opacity,\n          fill: fill,\n          stroke: stroke,\n          onClick: onClick,\n          onMouseEnter: onMouseEnter\n        });\n      }));\n    }\n  }]);\n  return Legend;\n}(_react.Component);\n\nexports.default = Legend;\nLegend.propTypes = {\n  data: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    value: _propTypes2.default.number.isrequired,\n    label: _propTypes2.default.string.isrequired,\n    className: _propTypes2.default.string,\n    isEmpty: _propTypes2.default.boolean\n  })).isRequired,\n  selected: _propTypes2.default.shape({\n    value: _propTypes2.default.number.isRequired,\n    label: _propTypes2.default.string.isRequired,\n    className: _propTypes2.default.string,\n    isEmpty: _propTypes2.default.boolean\n  }).isRequired,\n  toggleSelect: _propTypes2.default.bool.isRequired,\n  colorFunction: _propTypes2.default.func.isRequired,\n  onMouseEnter: _propTypes2.default.func.isRequired,\n  onClick: _propTypes2.default.func.isRequired,\n  width: _propTypes2.default.number.isRequired,\n  totalWidth: _propTypes2.default.number.isRequired,\n  className: _propTypes2.default.string,\n  colors: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  emptyColor: _propTypes2.default.string,\n  strokeColor: _propTypes2.default.string\n};\nLegend.defaultProps = {\n  data: [{\n    label: '',\n    value: 100,\n    isEmpty: true\n  }],\n  selected: {\n    value: 100,\n    label: '',\n    isEmpty: true\n  },\n  toggleSelect: false,\n  className: 'donutchart-legend',\n  width: 250,\n  totalWidth: 750,\n  colors: ['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4caf50', '#8bc34a', '#cddc39', '#ffeb3b', '#ffc107', '#ff9800', '#ff5722', '#795548', '#607d8b'],\n  emptyColor: '#e0e0e0',\n  strokeColor: '#212121',\n  colorFunction: function colorFunction(colors, index) {\n    return colors[index % colors.length];\n  },\n  onMouseEnter: function onMouseEnter(item) {\n    return item;\n  },\n  onClick: function onClick(item) {\n    return item;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}