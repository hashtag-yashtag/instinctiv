{"ast":null,"code":"import _classCallCheck from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yash/instinctiv/instinctiv/src/components/Checkout/index.js\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport \"./checkout.css\";\n\nvar Checkout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Checkout, _React$Component);\n\n  function Checkout(props) {\n    var _this;\n\n    _classCallCheck(this, Checkout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checkout).call(this, props));\n\n    _this.onToken = function (description) {\n      return function (token, args) {\n        // let t = this.props.stripe.createToken(token) ;\n        // console.log(t);\n        console.log(token);\n\n        if (token != null) {\n          _this.successPayment();\n        } else {\n          _this.errorPayment();\n        } // TODO: Send the token information and any other\n        // relevant information to your payment process\n        // server, wait for the response, and update the UI\n        // accordingly. How this is done is up to you. Using\n        // XHR, fetch, or a GraphQL mutation is typical.\n\n      };\n    };\n\n    _this.state = {\n      value: ''\n    };\n    _this.balance = 0;\n    _this.db = null;\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Checkout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.db = this.props.firebase.db;\n      this.db.collection(\"Users\").doc(this.props.firebase.auth.O).onSnapshot(function (docSnapshot) {\n        console.log(\"Received doc snapshot: docSnapshot\", docSnapshot.data());\n        _this2.balance = docSnapshot.data().balance;\n      }, function (err) {\n        console.log(\"Encountered error: \".concat(err));\n      });\n    }\n  }, {\n    key: \"successPayment\",\n    value: function successPayment() {\n      console.log(\"SUCCESS PAYMENT\");\n      newBalance = number(this.state.value) + this.balance;\n      this.db.collection(\"Users\").doc(this.props.firebase.auth.O).update({\n        \"balance\": newBalance\n      });\n    }\n  }, {\n    key: \"errorPayment\",\n    value: function errorPayment() {\n      console.log(\"ERROR PAYMERNT\");\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Buy Tokens\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"tokens\",\n        name: \"tokens\",\n        min: \"100\",\n        max: \"100000\",\n        placeholder: \"Number of Tokens\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(StripeCheckout, {\n        amount: this.state.value,\n        billingAddress: true,\n        description: \"Buy Instinctiv Tokens\",\n        locale: \"auto\",\n        name: \"instinctiv\",\n        stripeKey: \"pk_test_fSeP0u5pxF5vEmLguwFpf80Z\",\n        token: this.onToken(),\n        zipCode: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Checkout;\n}(React.Component);\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default withAuthorization(condition)(Checkout);","map":{"version":3,"sources":["/Users/yash/instinctiv/instinctiv/src/components/Checkout/index.js"],"names":["React","StripeCheckout","AuthUserContext","withAuthorization","Checkout","props","onToken","description","token","args","console","log","successPayment","errorPayment","state","value","balance","db","handleChange","bind","handleSubmit","firebase","collection","doc","auth","O","onSnapshot","docSnapshot","data","err","newBalance","number","update","event","setState","target","preventDefault","Component","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react'\nimport StripeCheckout from 'react-stripe-checkout';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport \"./checkout.css\"\n\nclass Checkout extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { value: '' };\n        this.balance = 0;\n        this.db = null;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.db = this.props.firebase.db;\n        this.db.collection(\"Users\").doc(this.props.firebase.auth.O).onSnapshot(docSnapshot => {\n            console.log(`Received doc snapshot: docSnapshot`, docSnapshot.data());\n            this.balance = docSnapshot.data().balance\n          }, err => {\n            console.log(`Encountered error: ${err}`);\n        });\n    }\n\n    onToken = (description) => (token, args) => {\n        // let t = this.props.stripe.createToken(token) ;\n        // console.log(t);\n        console.log(token);\n\n        if (token != null) {\n            this.successPayment()\n        }\n        else {\n            this.errorPayment()\n        }\n\n        // TODO: Send the token information and any other\n        // relevant information to your payment process\n        // server, wait for the response, and update the UI\n        // accordingly. How this is done is up to you. Using\n        // XHR, fetch, or a GraphQL mutation is typical.\n    };\n\n    successPayment() {\n        console.log(\"SUCCESS PAYMENT\")\n        \n        newBalance = number(this.state.value) + this.balance\n        this.db.collection(\"Users\").doc(this.props.firebase.auth.O).update({\n            \"balance\": newBalance\n        });\n    }\n\n    errorPayment() {\n        console.log(\"ERROR PAYMERNT\")\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n\n\n    render() {\n        return (\n\n            <div class=\"align-center\">\n                <h4>Buy Tokens</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"number\"\n                        id=\"tokens\"\n                        name=\"tokens\"\n                        min=\"100\"\n                        max=\"100000\"\n                        placeholder=\"Number of Tokens\"\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n\n                </form>\n\n                <StripeCheckout\n                    amount={this.state.value}\n                    billingAddress\n                    description=\"Buy Instinctiv Tokens\"\n                    locale=\"auto\"\n                    name=\"instinctiv\"\n                    stripeKey=\"pk_test_fSeP0u5pxF5vEmLguwFpf80Z\"\n                    token={this.onToken()}\n                    zipCode\n                />\n            </div>\n        )\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Checkout);\n"]},"metadata":{},"sourceType":"module"}