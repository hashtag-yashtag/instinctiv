{"ast":null,"code":"import _classCallCheck from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yash/instinctiv/instinctiv/src/components/Prediction/index.js\";\nimport React, { Component } from 'react';\nimport { withAuthorization, AuthUserContext } from '../Session';\nimport * as ROLES from '../../constants/roles';\nimport { Table, Col, Row, Button, Card } from 'reactstrap';\nimport { withFirebase } from '../Firebase';\nimport DonutChart from 'react-donut-chart';\nimport { compose } from 'recompose';\nimport PropTypes from 'prop-types';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nvar Prediction =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Prediction, _Component);\n\n  function Prediction(props) {\n    var _this;\n\n    _classCallCheck(this, Prediction);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Prediction).call(this, props));\n\n    _this.toggleDarkLight = function (event) {\n      var body = document.getElementById(\"body\");\n      var currentClass = body.className;\n      body.className = currentClass === \"dark-mode\" ? \"light-mode\" : \"dark-mode\";\n    };\n\n    _this.state = {\n      dataPie: []\n    };\n    return _this;\n  }\n\n  _createClass(Prediction, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.firebase.db.collection(\"Predictions\").onSnapshot(function (querySnapshot) {\n        console.log(\"Received query snapshot of size \".concat(querySnapshot.size));\n        var mapIndex = 0;\n        querySnapshot.forEach(function (element) {\n          _this2.state.dataPie.push([]);\n\n          console.log(_this2.state.dataPie[0]);\n\n          _this2.state.dataPie[mapIndex].push({\n            label: 'UP',\n            value: element.data().up\n          });\n\n          _this2.state.dataPie[mapIndex].push({\n            label: 'DOWN',\n            value: element.data().down\n          });\n\n          mapIndex++;\n        });\n\n        _this2.setState({\n          dataPie: _this2.state.dataPie\n        });\n      });\n      this.setState({\n        bets: this.state.bets\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, function (authUser) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"body\", {\n          id: \"body\",\n          class: \"light-mode\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          name: \"dark_light\",\n          onClick: _this3.toggleDarkLight,\n          title: \"Toggle dark/light mode\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Change Theme\"), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(Col, {\n          sm: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"home-page\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Prediction Database\")), React.createElement(DonutChart, {\n          data: _this3.state.dataPie[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(DonutChart, {\n          data: _this3.state.dataPie[1],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(DonutChart, {\n          data: _this3.state.dataPie[2],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(DonutChart, {\n          data: _this3.state.dataPie[3],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })), React.createElement(Col, {\n          sm: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }))));\n      });\n    }\n  }]);\n\n  return Prediction;\n}(Component);\n\nvar condition = function condition(authUser) {\n  return authUser && !!authUser.roles[ROLES.ADMIN];\n};\n\nexport default compose(withAuthorization(condition), withFirebase)(Prediction);","map":{"version":3,"sources":["/Users/yash/instinctiv/instinctiv/src/components/Prediction/index.js"],"names":["React","Component","withAuthorization","AuthUserContext","ROLES","Table","Col","Row","Button","Card","withFirebase","DonutChart","compose","PropTypes","BootstrapTable","paginationFactory","Prediction","props","toggleDarkLight","event","body","document","getElementById","currentClass","className","state","dataPie","firebase","db","collection","onSnapshot","querySnapshot","console","log","size","mapIndex","forEach","element","push","label","value","data","up","down","setState","bets","authUser","condition","roles","ADMIN"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { withAuthorization, AuthUserContext } from '../Session';\r\nimport * as ROLES from '../../constants/roles';\r\nimport { Table, Col, Row, Button, Card } from 'reactstrap';\r\nimport { withFirebase } from '../Firebase';\r\nimport DonutChart from 'react-donut-chart';\r\nimport { compose } from 'recompose';\r\nimport PropTypes from 'prop-types';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\n\r\n\r\nclass Prediction extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dataPie: [],\r\n    }\r\n  }\r\n  toggleDarkLight = event => {\r\n   var body = document.getElementById(\"body\");\r\n   var currentClass = body.className;\r\n   body.className = currentClass === \"dark-mode\" ? \"light-mode\" : \"dark-mode\";\r\n }\r\n\r\n componentDidMount(){\r\n  this.props.firebase.db.collection(\"Predictions\").onSnapshot(querySnapshot => {\r\n    console.log(`Received query snapshot of size ${querySnapshot.size}`);\r\n    var mapIndex = 0;\r\n    querySnapshot.forEach(element => {\r\n      this.state.dataPie.push([]);\r\n      console.log(this.state.dataPie[0]);\r\n      this.state.dataPie[mapIndex].push({\r\n        label: 'UP',\r\n        value: element.data().up,\r\n      });\r\n      this.state.dataPie[mapIndex].push({\r\n        label: 'DOWN',\r\n        value: element.data().down,\r\n      });\r\n      mapIndex++;\r\n    });\r\n\r\n    this.setState({\r\n      dataPie: this.state.dataPie,\r\n    })\r\n  });\r\n  this.setState({\r\n    bets: this.state.bets,\r\n  })\r\n }\r\n\r\n  render() {\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n      {authUser => (\r\n        <div>\r\n        <body id=\"body\" class=\"light-mode\">\r\n        <Button color=\"primary\" name=\"dark_light\" onClick= {this.toggleDarkLight} title=\"Toggle dark/light mode\">Change Theme</Button>\r\n          <Row>\r\n            <Col sm=\"3\">\r\n            </Col>\r\n            <Col sm=\"6\">\r\n              <div className=\"home-page\">\r\n            <h2>Prediction Database</h2>\r\n            </div>\r\n            <DonutChart data = {this.state.dataPie[0]} />\r\n            <DonutChart data = {this.state.dataPie[1]} />\r\n            <DonutChart data = {this.state.dataPie[2]} />\r\n            <DonutChart data = {this.state.dataPie[3]} />\r\n\r\n            </Col>\r\n            <Col sm=\"3\"></Col>\r\n            </Row>\r\n            </body>\r\n        </div>\r\n      )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst condition = authUser =>\r\n  authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  withAuthorization(condition),\r\n  withFirebase,\r\n)(Prediction);\r\n"]},"metadata":{},"sourceType":"module"}