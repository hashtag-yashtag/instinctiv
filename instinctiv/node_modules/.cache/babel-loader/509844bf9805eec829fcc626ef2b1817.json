{"ast":null,"code":"import _classCallCheck from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yash/instinctiv/instinctiv/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yash/instinctiv/instinctiv/src/components/Google/SignInGoogle.js\";\nimport React, { Component } from 'react';\nimport * as ROUTES from '../../constants/routes';\nimport { Button } from 'reactstrap';\n\nvar SignInGoogleBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignInGoogleBase, _Component);\n\n  function SignInGoogleBase(props) {\n    var _this;\n\n    _classCallCheck(this, SignInGoogleBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignInGoogleBase).call(this, props));\n\n    _this.onSubmit = function (event) {\n      _this.props.firebase.doSignInWithGoogle().then(function (socialAuthUser) {\n        // Create a user in your Firebase Realtime Database too\n        return _this.props.firebase.db.collection(\"Users\").doc(socialAuthUser.user.uid).onSnapshot(function (docSnapshot) {\n          if (docSnapshot.exists) {\n            console.log('exists');\n          } else {\n            _this.props.firebase.db.collection(\"Users\").doc(socialAuthUser.user.uid).set({\n              username: socialAuthUser.user.displayName,\n              email: socialAuthUser.user.email,\n              photoURL: socialAuthUser.user.photoURL,\n              balance: 500,\n              correctBets: 0,\n              totalBets: 0,\n              accuracy: 0.5 //roles: [],\n\n            }, {\n              merge: true\n            });\n          }\n\n          _this.setState({\n            balance: docSnapshot.data().balance,\n            username: docSnapshot.data().username,\n            correctBets: docSnapshot.data().correctBets,\n            totalBets: docSnapshot.data().totalBets,\n            accuracy: docSnapshot.data().accuracy\n          }); // ...\n\n\n          _this.setState({\n            error: null\n          });\n\n          _this.props.history.push(ROUTES.HOME); // ...\n\n        }, function (error) {\n          _this.setState({\n            error: error\n          });\n        });\n      });\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(SignInGoogleBase, [{\n    key: \"render\",\n    value: function render() {\n      var error = this.state.error;\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Sign In with Google\"), error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, error.message));\n    }\n  }]);\n\n  return SignInGoogleBase;\n}(Component);\n\nexport default SignInGoogleBase;","map":{"version":3,"sources":["/Users/yash/instinctiv/instinctiv/src/components/Google/SignInGoogle.js"],"names":["React","Component","ROUTES","Button","SignInGoogleBase","props","onSubmit","event","firebase","doSignInWithGoogle","then","socialAuthUser","db","collection","doc","user","uid","onSnapshot","docSnapshot","exists","console","log","set","username","displayName","email","photoURL","balance","correctBets","totalBets","accuracy","merge","setState","data","error","history","push","HOME","preventDefault","state","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AAEA,SAAQC,MAAR,QAAqB,YAArB;;IAEMC,gB;;;;;AACF,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;;AADiB,UAMnBC,QANmB,GAMR,UAAAC,KAAK,EAAI;AAClB,YAAKF,KAAL,CAAWG,QAAX,CACGC,kBADH,GAEGC,IAFH,CAEQ,UAAAC,cAAc,EAAI;AACpB;AACA,eAAO,MAAKN,KAAL,CAAWG,QAAX,CAAoBI,EAApB,CAAuBC,UAAvB,CAAkC,OAAlC,EAA2CC,GAA3C,CAA+CH,cAAc,CAACI,IAAf,CAAoBC,GAAnE,EACNC,UADM,CACK,UAAAC,WAAW,EAAI;AACzB,cAAGA,WAAW,CAACC,MAAf,EAAsB;AACpBC,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAED,WAHD,MAGK;AACH,kBAAKhB,KAAL,CAAWG,QAAX,CAAoBI,EAApB,CAAuBC,UAAvB,CAAkC,OAAlC,EAA2CC,GAA3C,CAA+CH,cAAc,CAACI,IAAf,CAAoBC,GAAnE,EACCM,GADD,CACK;AACHC,cAAAA,QAAQ,EAAEZ,cAAc,CAACI,IAAf,CAAoBS,WAD3B;AAEHC,cAAAA,KAAK,EAAEd,cAAc,CAACI,IAAf,CAAoBU,KAFxB;AAGHC,cAAAA,QAAQ,EAAEf,cAAc,CAACI,IAAf,CAAoBW,QAH3B;AAIHC,cAAAA,OAAO,EAAE,GAJN;AAKHC,cAAAA,WAAW,EAAE,CALV;AAMHC,cAAAA,SAAS,EAAE,CANR;AAOHC,cAAAA,QAAQ,EAAE,GAPP,CAQH;;AARG,aADL,EAUG;AAACC,cAAAA,KAAK,EAAE;AAAR,aAVH;AAWD;;AACD,gBAAKC,QAAL,CAAc;AACZL,YAAAA,OAAO,EAAET,WAAW,CAACe,IAAZ,GAAmBN,OADhB;AAEZJ,YAAAA,QAAQ,EAAEL,WAAW,CAACe,IAAZ,GAAmBV,QAFjB;AAGZK,YAAAA,WAAW,EAAEV,WAAW,CAACe,IAAZ,GAAmBL,WAHpB;AAIZC,YAAAA,SAAS,EAAEX,WAAW,CAACe,IAAZ,GAAmBJ,SAJlB;AAKZC,YAAAA,QAAQ,EAAEZ,WAAW,CAACe,IAAZ,GAAmBH;AALjB,WAAd,EAjByB,CAuBhB;;;AACT,gBAAKE,QAAL,CAAc;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAAd;;AACA,gBAAK7B,KAAL,CAAW8B,OAAX,CAAmBC,IAAnB,CAAwBlC,MAAM,CAACmC,IAA/B,EAzByB,CA0BzB;;AACD,SA5BM,EA4BJ,UAAAH,KAAK,EAAI;AACV,gBAAKF,QAAL,CAAc;AAAEE,YAAAA,KAAK,EAALA;AAAF,WAAd;AACD,SA9BM,CAAP;AAgCL,OApCD;;AAqCA3B,MAAAA,KAAK,CAAC+B,cAAN;AACH,KA7CoB;;AAGjB,UAAKC,KAAL,GAAa;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAAb;AAHiB;AAIlB;;;;6BA2CQ;AAAA,UACCA,KADD,GACW,KAAKK,KADhB,CACCL,KADD;AAGP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAK5B,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAG,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAIG4B,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAACM,OAAV,CAJZ,CADF;AAQD;;;;EA3D0BvC,S;;AA+D/B,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as ROUTES from '../../constants/routes';\n\nimport {Button} from 'reactstrap';\n\nclass SignInGoogleBase extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = { error: null };\n    }\n  \n    onSubmit = event => {\n      this.props.firebase\n        .doSignInWithGoogle()\n        .then(socialAuthUser => {\n            // Create a user in your Firebase Realtime Database too\n            return this.props.firebase.db.collection(\"Users\").doc(socialAuthUser.user.uid)\n            .onSnapshot(docSnapshot => {\n              if(docSnapshot.exists){\n                console.log('exists');\n                \n              }else{\n                this.props.firebase.db.collection(\"Users\").doc(socialAuthUser.user.uid)\n                .set({\n                  username: socialAuthUser.user.displayName,\n                  email: socialAuthUser.user.email,\n                  photoURL: socialAuthUser.user.photoURL,\n                  balance: 500,\n                  correctBets: 0,\n                  totalBets: 0,\n                  accuracy: 0.5\n                  //roles: [],\n                }, {merge: true});\n              }\n              this.setState({\n                balance: docSnapshot.data().balance,\n                username: docSnapshot.data().username,\n                correctBets: docSnapshot.data().correctBets,\n                totalBets: docSnapshot.data().totalBets,\n                accuracy: docSnapshot.data().accuracy\n              });      // ...\n              this.setState({ error: null });\n              this.props.history.push(ROUTES.HOME);\n              // ...\n            }, error => {\n              this.setState({ error });\n            });\n  \n      });\n      event.preventDefault();\n  }\n  \n    render() {\n      const { error } = this.state;\n  \n      return (\n        <form onSubmit={this.onSubmit}>\n          <Button color = \"primary\" type=\"submit\">Sign In with Google</Button>\n\n  \n          {error && <p>{error.message}</p>}\n        </form>\n      );\n    }\n  }\n\n\nexport default SignInGoogleBase;\n"]},"metadata":{},"sourceType":"module"}